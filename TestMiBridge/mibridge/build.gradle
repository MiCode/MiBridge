apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task renameExtractAar(dependsOn:'assemble', type:Copy) {
    outputs.upToDateWhen {false}
    println(project.buildDir.getAbsolutePath())
    File processAarFile = new File(project.buildDir,"outputs/aar/mibridge-release.aar")
    File workDir = new File(project.buildDir,"outputs/aar/workDir")
    from zipTree(processAarFile)
    into workDir

    doFirst {
        if (workDir.exists()){
            workDir.delete()
        }
    }

    doLast {
        File rTxt = new File(workDir,"R.txt")
        rTxt.delete()
    }
}

task outAar(dependsOn: renameExtractAar, type: Zip){
    outputs.upToDateWhen {false}
    File aarDir = new File(project.buildDir,"outputs/aar")
    File workDir = new File(aarDir,"workDir")
    from workDir
    archiveName "mibridge-release.aar"
    destinationDir aarDir
}


task makeJar(type: Copy) {
    //删除存在的
    delete'build/libs/debug/MiBridge.jar'
    //设置拷贝的文件
    from('build/intermediates/packaged-classes/debug/')
    //打进jar包后的文件目录
    into('build/libs/debug/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar','MiBridge.jar')
}
task makeJar_release(type: Copy) {
    //删除存在的
    delete'build/libs/release/MiBridge.jar'
    //设置拷贝的文件
    from('build/intermediates/packaged-classes/release/')
    //打进jar包后的文件目录
    into('build/libs/release/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar','MiBridge.jar')
}
makeJar.dependsOn(build)